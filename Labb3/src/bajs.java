import java.util.Arrays;
import java.util.Random;
import javax.swing.*;

public class Gui extends javax.swing.JFrame{


    JLabel[][] lblDiceResult;
    JLabel[] lblPlayerNr;
    int intPlayerNRLblX = 10;

    int[] intDiceSum;
    int[][] intDiceResult;
    JLabel[] lblPlayerSum;
    int intPlayerSumLblX = 100;
    int intIconsStartX = 180;
    int intIconsStartY = 0;
    int intIconsWidth = 100;
    int inticonsHeight = 100;
    int intXIconspace = 150;
    int intYIconspace  = 100;

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        Iconpanel = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        Playeramount = new javax.swing.JComboBox();
        Diceamount = new javax.swing.JComboBox();
        lblplayeramount = new javax.swing.JLabel();
        lbldiceamount = new javax.swing.JLabel();
        Play = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Reset = new javax.swing.JToggleButton();
        Higscor = new javax.swing.JScrollPane();
        txtaHighScoreList = new javax.swing.JTextArea();
        lblwinner = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Iconpanel.setBackground(new java.awt.Color(255, 255, 255));
        Iconpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Iconpanel.setForeground(new java.awt.Color(255, 255, 255));
        Iconpanel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        javax.swing.GroupLayout IconpanelLayout = new javax.swing.GroupLayout(Iconpanel);
        Iconpanel.setLayout(IconpanelLayout);
        IconpanelLayout.setHorizontalGroup(
                IconpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IconpanelLayout.createSequentialGroup()
                                .addGap(0, 998, Short.MAX_VALUE)
                                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        IconpanelLayout.setVerticalGroup(
                IconpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(IconpanelLayout.createSequentialGroup()
                                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 119, Short.MAX_VALUE))
        );

        Playeramount.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Playeramount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        Playeramount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayeramountActionPerformed(evt);
            }
        });

        Diceamount.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Diceamount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        Diceamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiceamountActionPerformed(evt);
            }
        });

        lblplayeramount.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblplayeramount.setText("Amount of players");

        lbldiceamount.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lbldiceamount.setText("Amount of dices");

        Play.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Play.setText("Rol the dice");
        Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayActionPerformed(evt);
            }
        });

        jLabel3.setText("High Score");

        Reset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Reset.setText("Reset high score");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        txtaHighScoreList.setEditable(false);
        txtaHighScoreList.setColumns(20);
        txtaHighScoreList.setRows(5);
        Higscor.setViewportView(txtaHighScoreList);

        lblwinner.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Diceamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Playeramount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbldiceamount, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblplayeramount))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Reset, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(Play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(Higscor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblwinner, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)))
                                .addGap(12, 12, 12))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Iconpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Playeramount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblplayeramount))
                                                .addGap(19, 19, 19)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Diceamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lbldiceamount)))
                                        .addComponent(lblwinner, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(Play, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(Higscor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Iconpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayActionPerformed
        // Rol the dice
        Roledice();
    }//GEN-LAST:event_PlayActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // Delete the data from HighScore
        HighScore.DeleteData();
    }//GEN-LAST:event_ResetActionPerformed

    private void PlayeramountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayeramountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlayeramountActionPerformed

    private void DiceamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiceamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiceamountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    void Roledice() {
        int intDiceamount = Integer.parseInt(Diceamount.getSelectedItem().toString());//getting the amount of dices from the combobox.
        int intPlayeramount = Integer.parseInt(Playeramount.getSelectedItem().toString());//getting the amount of players for the combobox.

        lblDiceResult = new JLabel[intPlayeramount][intDiceamount];//redefine the second-dimentional array to a JLable that shows the dice icons on the screan.
        intDiceResult = new int[intPlayeramount][intDiceamount];//a second-dimentional array that stors the valeu of every dice for every player in a int.
        lblPlayerNr = new JLabel[intPlayeramount]; //a arrey of JLabel that pints out every players number.
        intDiceSum = new int[intPlayeramount]; // arrey that holds al the dice valeus for every player.
        lblPlayerSum = new JLabel[intPlayeramount]; // arrey that that prints al the sum of al the dices on a JLable.

        Random ra = new Random();//use the imported import java.util.Random; tang
        for(int i = 0; i < intPlayeramount; i++ ){ //create a for loop that creates a int i wich is suposed to be smaler then the player aount and as log as it is add 1 to i ewery time the loop is active.
            for(int n = 0; n < intDiceamount; n++){ //create a for loop that creates a int n wich adds 1 to the iniger ewerytime the loop is activated and n is less then the dice amount.
                int randInt = ra.nextInt(6) + 1; //randomice diferent outcoms betwen 1 and 6. add one becase 0 isent suposed to be a number on a dice.
                intDiceResult[i][n] = randInt; //saves the random number in a secon deimensional arayey that holds al the valeus for every dice and player.
                intDiceSum[i] = intDiceSum[i] + randInt; //ad the new dice valeu to the sum of the player.

                /*The if statment */
                if (n == intDiceamount - 1) { //
                    HighScore.addScore(i, intDiceSum[i]);//Ading the score to the HighScore list.

                }
            }
        }

        Iconpanel.removeAll(); //remove al icons befor you can ad new ones.

        for(int i = 0; i < intPlayeramount; i++ ){
            lblPlayerNr[i] = new JLabel();//a new lable that show wich player is geting what result.
            Iconpanel.add(lblPlayerNr[i]);//ading all JLabels that shows wich player to tow panels for icons.
            lblPlayerNr[i].setText("Player: " + String.valueOf(i +1));//printing out the player name next to the dices.
            lblPlayerNr[i].setBounds(intPlayerNRLblX, intIconsStartY + intYIconspace * i, 70, 70);//specifing the cordinats wear the Jlabel picture is supsed to be.

            lblPlayerSum[i] = new JLabel();//a new label for printing out the sum of al the players.
            Iconpanel.add(lblPlayerSum[i]);//ading all labels to the panels for the icons.
            lblPlayerSum[i].setText("sum: " + String.valueOf(intDiceSum[i]));// print out al the sum for the players.
            lblPlayerSum[i].setBounds(intPlayerSumLblX, intIconsStartY + intYIconspace * i, 70, 70);//specifing the cordinats wear the Jlabel picture is supsed to be.

            for(int n = 0; n < intDiceamount; n++){
                int intDicevaleu = intDiceResult[i][n];//Geting al valeus and saving it to a temporary int.

                ImageIcon imgDice = new ImageIcon("IMG/" + intDicevaleu + ".JPG"); //import the pictures from the img map in the java prodject. wich are named 1,2,3,4,5 for the amount of dices.

                lblDiceResult[i][n] = new JLabel();//a new Jlaben that shows the pictures fo the dice result.
                Iconpanel.add(lblDiceResult[i][n]);//adding all Labels to the panel.
                lblDiceResult[i][n].setText("The imgage dosent exist");//if the picture is crupt or dosnet exist the program whrits this.
                lblDiceResult[i][n].setIcon(imgDice);//Puts the icon of each cable to a picture of a dice showing the value.
                lblDiceResult[i][n].setBounds(intIconsStartX + intXIconspace * n, intIconsStartY + intYIconspace * i, intIconsWidth, intIconsWidth);
            }
        }

        Iconpanel.repaint();//empthy the icon panel befor you ad can ad new ones.

        //check how has the igest score
        int[] tempArray = intDiceSum.clone();//cloning the array that contains the users dice sum to a tempery array
        Arrays.sort(tempArray);//sorting the array from smalet to biggset.
        int hiegestsum = tempArray[tempArray.length - 1];//saving the last valeu wich is the biggest dutu it is sorted from smales to lagest

        int winner = 0;//this int will be replaced with the winner
        for (int i = 0; i < intPlayeramount; i++){
            if(hiegestsum == intDiceSum[i]){//check wich wone of the playes have the higest sum
                winner = i;
            }
        }

        lblwinner.setText(" Player " + (winner +1) + " won with " + intDiceSum[winner] + " points");//printing out who wone.

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Diceamount;
    private javax.swing.JScrollPane Higscor;
    private javax.swing.JPanel Iconpanel;
    private javax.swing.JButton Play;
    private javax.swing.JComboBox Playeramount;
    private javax.swing.JToggleButton Reset;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel lbldiceamount;
    private javax.swing.JLabel lblplayeramount;
    private javax.swing.JLabel lblwinner;
    public static javax.swing.JTextArea txtaHighScoreList;
    // End of variables declaration//GEN-END:variables
}
